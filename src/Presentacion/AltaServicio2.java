package Presentacion;

import DataTypes.DtServicio;
import Logica.Fabrica;
import Logica.FuncionImg;
import Logica.ISistema;
import Logica.Simple;
import Manejadores.ManejadorCategoria;
import java.awt.Image;
import java.io.File;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;


public class AltaServicio2 extends javax.swing.JInternalFrame {
    private AltaServicio anterior;
    //private ArrayList<byte[]> imagenes;
    private String rutaImagen1;
    private String rutaImagen2;
    private String rutaImagen3;
    /**
     * Creates new form AltaServicio2
     */
    
    private DefaultListModel lista = new DefaultListModel();
    private ISistema IS;
    public AltaServicio2(AltaServicio ant) {
        initComponents();
        anterior = ant;
        mostrarImagen1.setSize(72, 75);
        mostrarImagen2.setSize(72, 75);
        mostrarImagen3.setSize(72, 75);
        
        ManejadorCategoria categorias = ManejadorCategoria.getInstance();
        DefaultMutableTreeNode raiz = new DefaultMutableTreeNode("Categorias");
        categorias.crearArbol(raiz);
        DefaultTreeModel modelo = new DefaultTreeModel(raiz);
        this.arbol.setModel(modelo);
        
        Fabrica fabrica = Fabrica.getInstance();
        IS = fabrica.getISistema();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        arbol = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaCategorias = new javax.swing.JList();
        botonAgregar = new javax.swing.JButton();
        botonQuitar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        mostrarImagen1 = new javax.swing.JLabel();
        mostrarImagen2 = new javax.swing.JLabel();
        mostrarImagen3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        botonImagen1 = new javax.swing.JButton();
        botonImagen2 = new javax.swing.JButton();
        botonImagen3 = new javax.swing.JButton();
        botonAceptar = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();

        jScrollPane1.setViewportView(arbol);

        jScrollPane2.setViewportView(listaCategorias);

        botonAgregar.setText("Agregar");
        botonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarActionPerformed(evt);
            }
        });

        botonQuitar.setText("Quitar");
        botonQuitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonQuitarActionPerformed(evt);
            }
        });

        jLabel1.setText("CATEGORIAS");

        jLabel5.setText("IMAGENES");

        botonImagen1.setText("Imagen 1");
        botonImagen1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonImagen1ActionPerformed(evt);
            }
        });

        botonImagen2.setText("Imagen 2");
        botonImagen2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonImagen2ActionPerformed(evt);
            }
        });

        botonImagen3.setText("Imagen 3");
        botonImagen3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonImagen3ActionPerformed(evt);
            }
        });

        botonAceptar.setText("Aceptar");
        botonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAceptarActionPerformed(evt);
            }
        });

        jButton7.setText("Atras");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(mostrarImagen2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonImagen2)
                            .addComponent(jLabel5))
                        .addGap(72, 72, 72)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(mostrarImagen3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonImagen3))
                        .addGap(50, 50, 50))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(botonAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(botonQuitar, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(mostrarImagen1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonImagen1))
                .addContainerGap(363, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addComponent(botonAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(102, 102, 102))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(botonAgregar)
                        .addGap(39, 39, 39)
                        .addComponent(botonQuitar)))
                .addGap(7, 7, 7)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mostrarImagen1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mostrarImagen2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mostrarImagen3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonImagen1)
                    .addComponent(botonImagen2)
                    .addComponent(botonImagen3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonAceptar)
                    .addComponent(jButton7)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarActionPerformed
        String[] separador = arbol.getSelectionPath().toString().split(",");
        int tamano = separador.length;
        String aux = separador[tamano-1];
        aux = aux.substring(1);
        separador = aux.split("]");
        aux = separador[0];
        
        ManejadorCategoria categorias = ManejadorCategoria.getInstance();
        
        if(categorias.buscarCategoria(aux) instanceof Simple){
            if(lista.contains(aux)){
                JOptionPane.showMessageDialog(null, "Ya agrego esta categoria","Error",JOptionPane.ERROR_MESSAGE);
            }else{
                lista.addElement(aux);
                listaCategorias.setModel(lista);
            }
        }else{
            JOptionPane.showMessageDialog(null, "La categoria es compuesta","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botonAgregarActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        anterior.setVisible(true);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void botonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAceptarActionPerformed
        // TODO add your handling code here:
        ArrayList<String> cate = new ArrayList<>();
        for(int i=0; i<lista.getSize(); i++){
            cate.add(lista.getElementAt(i).toString());
        }
        
        float precio = Float.parseFloat(anterior.getEntradaPrecio());
        if(lista.isEmpty()){
            JOptionPane.showMessageDialog(null, "Ingrese al menos una categoria","Error",JOptionPane.ERROR_MESSAGE);
        }else{
        DtServicio datos;
        datos = new DtServicio(anterior.getEntradaNombre(), anterior.getEntradaDescripcion(), precio, anterior.getEntradaCiudadOrigen(), anterior.getEntradaCiudadDestino(), cate, anterior.getEntradaProveedor(), rutaImagen1, rutaImagen2, rutaImagen3);
        
        boolean retorno;
        retorno = IS.altaServicio(datos);
        if(retorno){
            JOptionPane.showMessageDialog(null, "Se agrego correctamente");
        }else{
            JOptionPane.showMessageDialog(null, "Servicio existente","Error",JOptionPane.ERROR_MESSAGE);
        }
        this.setVisible(false);
        }
    }//GEN-LAST:event_botonAceptarActionPerformed

    private void botonImagen1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonImagen1ActionPerformed
        // TODO add your handling code here:
        
        JFileChooser selector = new JFileChooser();
        File imagen1 = null;
        FuncionImg f = new FuncionImg();
        if(selector.showDialog(null, "Agregar Imagen") == JFileChooser.APPROVE_OPTION){
            imagen1 = selector.getSelectedFile();
            rutaImagen1 = String.valueOf(imagen1); 
            if(imagen1.canRead()){
                if((imagen1.getName().endsWith("jpg")) || (imagen1.getName().endsWith("png"))){
                    ImageIcon img1 = new ImageIcon(rutaImagen1);
                    Icon icono1 = new ImageIcon(img1.getImage().getScaledInstance(mostrarImagen1.getWidth(), mostrarImagen1.getHeight(), Image.SCALE_DEFAULT));
                    mostrarImagen1.setIcon(icono1);
                }
            }
        }
        
        //-------ANTIGUA MANERA DE TOMAR IMAGENES-------
        /*JFileChooser selector = new JFileChooser();
        File imagen1 = null;
        byte[] lugarImagen;
        FuncionImg f = new FuncionImg();
        if(selector.showDialog(null, "Agregar Imagen 1")==JFileChooser.APPROVE_OPTION){
            imagen1 = selector.getSelectedFile();
            if(imagen1.canRead()){
                if((imagen1.getName().endsWith(".jpg")) || (imagen1.getName().endsWith(".png"))){
                    lugarImagen=f.abrirImagen(imagen1);
                    //imagenes.set(0, lugarImagen);
                    byteImagen1 = lugarImagen;
                    mostrarImagen1.setIcon(new ImageIcon(lugarImagen));
                }else{
                    JOptionPane.showMessageDialog(null, "Formato Incorrecto");
                }
            }else{
                JOptionPane.showMessageDialog(null, "Seleccione una imagen");
            }
        }*/
    }//GEN-LAST:event_botonImagen1ActionPerformed

    private void botonImagen2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonImagen2ActionPerformed
        // TODO add your handling code here:
        JFileChooser selector = new JFileChooser();
        
        
        File imagen2 = null;
        FuncionImg f = new FuncionImg();
        if(selector.showDialog(null, "Agregar Imagen") == JFileChooser.APPROVE_OPTION){
            imagen2 = selector.getSelectedFile();
            rutaImagen2 = String.valueOf(imagen2); 
            if(imagen2.canRead()){
                if((imagen2.getName().endsWith("jpg")) || (imagen2.getName().endsWith("png"))){
                    ImageIcon img2 = new ImageIcon(rutaImagen2);
                    Icon icono2 = new ImageIcon(img2.getImage().getScaledInstance(mostrarImagen2.getWidth(), mostrarImagen2.getHeight(), Image.SCALE_DEFAULT));
                    mostrarImagen2.setIcon(icono2);
                }
            }
        }
//        File imagen2 = null;
//        byte[] lugarImagen;
//        FuncionImg f = new FuncionImg();
//        if(selector.showDialog(null, "Agregar Imagen 1")==JFileChooser.APPROVE_OPTION){
//            imagen2 = selector.getSelectedFile();
//            if(imagen2.canRead()){
//                if((imagen2.getName().endsWith(".jpg")) || (imagen2.getName().endsWith(".png"))){
//                    lugarImagen=f.abrirImagen(imagen2);
//                    byteImagen2 = lugarImagen;
//                    mostrarImagen2.setIcon(new ImageIcon(lugarImagen));
//                }else{
//                    JOptionPane.showMessageDialog(null, "Formato Incorrecto");
//                }
//            }else{
//                JOptionPane.showMessageDialog(null, "Seleccione una imagen");
//            }
//        }
    }//GEN-LAST:event_botonImagen2ActionPerformed

    private void botonImagen3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonImagen3ActionPerformed
        // TODO add your handling code here:
        JFileChooser selector = new JFileChooser();
        
        File imagen3 = null;
        FuncionImg f = new FuncionImg();
        if(selector.showDialog(null, "Agregar Imagen") == JFileChooser.APPROVE_OPTION){
            imagen3 = selector.getSelectedFile();
            rutaImagen3 = String.valueOf(imagen3); 
            if(imagen3.canRead()){
                if((imagen3.getName().endsWith("jpg")) || (imagen3.getName().endsWith("png"))){
                    ImageIcon img3 = new ImageIcon(rutaImagen3);
                    Icon icono3 = new ImageIcon(img3.getImage().getScaledInstance(mostrarImagen3.getWidth(), mostrarImagen3.getHeight(), Image.SCALE_DEFAULT));
                    mostrarImagen3.setIcon(icono3);
                }
            }
        }
        
//        File imagen3 = null;
//        byte[] lugarImagen;
//        FuncionImg f = new FuncionImg();
//        if(selector.showDialog(null, "Agregar Imagen 1")==JFileChooser.APPROVE_OPTION){
//            imagen3 = selector.getSelectedFile();
//            if(imagen3.canRead()){
//                if((imagen3.getName().endsWith(".jpg")) || (imagen3.getName().endsWith(".png"))){
//                    lugarImagen=f.abrirImagen(imagen3);
//                    byteImagen3 = lugarImagen;
//                    mostrarImagen3.setIcon(new ImageIcon(lugarImagen));
//                }else{
//                    JOptionPane.showMessageDialog(null, "Formato Incorrecto");
//                }
//            }else{
//                JOptionPane.showMessageDialog(null, "Seleccione una imagen");
//            }
//        }
    }//GEN-LAST:event_botonImagen3ActionPerformed

    private void botonQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonQuitarActionPerformed
        lista.removeElement(listaCategorias.getSelectedValue().toString());
        listaCategorias.setModel(lista);
    }//GEN-LAST:event_botonQuitarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTree arbol;
    private javax.swing.JButton botonAceptar;
    private javax.swing.JButton botonAgregar;
    private javax.swing.JButton botonImagen1;
    private javax.swing.JButton botonImagen2;
    private javax.swing.JButton botonImagen3;
    private javax.swing.JButton botonQuitar;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList listaCategorias;
    private javax.swing.JLabel mostrarImagen1;
    private javax.swing.JLabel mostrarImagen2;
    private javax.swing.JLabel mostrarImagen3;
    // End of variables declaration//GEN-END:variables
}
